{"version":3,"sources":["layouts/DockApp.js","utils/index.js","apps/system/Clock/eventBus.js","apps/system/ClockSetting/TzEditor.js","layouts/WindowFrame.js","apps/system/ClockSetting/index.js","apps/registry.js","apps/system/StartMenu/StartMenuPopover.js","apps/system/StartMenu/index.js","apps/system/Clock/index.js","apps/system/FullScreenToggle/index.js","core/SystemEventBus.js","core/System.js","layouts/SystemBar/index.js","views/System/index.js","App.js","index.js"],"names":["DockApp","props","state","open","handleClick","bind","handleBlur","handleClose","this","popover","setState","onClick","closeOnBlur","trigger","horizontalAlign","verticalAlign","variant","style","position","display","onBlurCapture","active","React","Component","defaultProps","toggleFullScreen","event","element","document","body","HTMLElement","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","clock","EventEmitter","CONSTANT","triggerTimezoneListUpdate","emit","unbindTimezoneListUpdateHandler","func","off","updateTimezoneList","timezoneList","key","value","localStorage","setItem","JSON","stringify","getTimezoneList","parse","getItem","mappedTimezones","map","label","lag","parseInt","replace","currentTimezoneIdx","findIndex","zone","TzEditor","onSortEnd","oldIndex","newIndex","newTimezone","arrayMove","onSelectChange","selectedTimezone","submitAddTz","timezoneSelections","find","newTimezoneList","handleDelete","index","splice","SortableItem","SortableElement","className","marginRight","marginTop","size","square","fontWeight","transform","SortableList","SortableContainer","items","selectedIndex","onChange","height","width","disabled","length","distance","WindowFrame","handleCloseApp","appid","window","terminateApp","header","content","enableResizing","default","x","y","dragHandleClassName","alignItems","justifyContent","overflow","ClockSetting","appName","CATALOG","APP","SETTING","ABOUT","REGISTRY","id","app","catalog","name","StartMenuPopover","handleClickMainlistItem","idx","newMainList","mainList","item","handleClickApplication","launchApp","Object","keys","cat","children","filter","reg","sideList","textDecoration","vertical","StartMenu","Clock","componentWillUnmount","clearInterval","timeout","updateCurrentTime","currentTime","moment","handleClickSetting","handleClickClose","dockAppRef","current","timeFormat","createRef","setInterval","on","format","toDate","add","split","join","ref","FullScreenToggle","system","killApp","pid","systemStore","autorun","console","log","runningApps","newApp","runningAppids","includes","App","theApp","defaultDisplayName","push","displayName","isActive","activateApp","i","observable","computed","systemEvt","targetApp","SystemBar","store","top","bottom","margin","System","observer","ResetStyles","createGlobalStyle","reset","theme","themes","SystemStore","addEventListener","ev","preventDefault","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ddf4ffa9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { List, Button } from 'react95';\r\n\r\nclass DockApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { popover } = this.props;\r\n    if (popover) {\r\n      const { open } = this.state;\r\n      this.setState({\r\n        open: !open,\r\n      });\r\n    }\r\n\r\n    const { onClick } = this.props;\r\n    onClick();\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  handleBlur() {\r\n    const { closeOnBlur } = this.props;\r\n    if (!closeOnBlur) {\r\n      return;\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n    const {\r\n      trigger, popover, horizontalAlign, verticalAlign,\r\n      variant,\r\n    } = this.props;\r\n    return (\r\n      <div style={{ position: 'relative', display: 'inline-block' }}>\r\n        {(open && popover) && (\r\n          <List\r\n            horizontalAlign={horizontalAlign}\r\n            verticalAlign={verticalAlign}\r\n          >\r\n            {popover}\r\n          </List>\r\n        )}\r\n        <Button\r\n          onBlurCapture={this.handleBlur}\r\n          onClick={this.handleClick}\r\n          active={open}\r\n          variant={variant}\r\n        >\r\n          {trigger}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDockApp.propTypes = {\r\n  trigger: PropTypes.node,\r\n  popover: PropTypes.node,\r\n  closeOnBlur: PropTypes.bool,\r\n  horizontalAlign: PropTypes.string,\r\n  verticalAlign: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nDockApp.defaultProps = {\r\n  popover: null,\r\n  closeOnBlur: true,\r\n  trigger: (<span> </span>),\r\n  horizontalAlign: 'right',\r\n  verticalAlign: 'top',\r\n  onClick: () => {},\r\n  variant: 'menu',\r\n};\r\n\r\nexport default DockApp;\r\n","export const toggleFullScreen = (event) => {\r\n  let element = document.body;\r\n\r\n  if (event instanceof HTMLElement) {\r\n    element = event;\r\n  }\r\n\r\n  const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\r\n\r\n  element.requestFullScreen = element.requestFullScreen\r\n    || element.webkitRequestFullScreen\r\n    || element.mozRequestFullScreen\r\n    || (() => false);\r\n  document.cancelFullScreen = document.cancelFullScreen\r\n    || document.webkitCancelFullScreen\r\n    || document.mozCancelFullScreen\r\n    || (() => false);\r\n\r\n  if (isFullscreen) {\r\n    document.cancelFullScreen();\r\n  } else {\r\n    element.requestFullScreen();\r\n  }\r\n};\r\n\r\nexport const getStorage = (key) => JSON.parse(localStorage.getItem(key));\r\nexport const setStorage = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n\r\nexport const nothing = () => {};\r\n","import { EventEmitter } from 'events';\r\nimport { setStorage, getStorage } from '../../../utils';\r\n\r\nconst clock = new EventEmitter();\r\n\r\nconst CONSTANT = {\r\n  TIMEZONELIST: 'TIMEZONE_LIST',\r\n  TIMEZONELIST_UPDATE: 'TIMEZONELIST_UPDATE',\r\n};\r\n\r\nconst triggerTimezoneListUpdate = () => clock.emit(CONSTANT.TIMEZONELIST_UPDATE);\r\nconst bindTimezoneListUpdateHandler = (func) => clock.on(CONSTANT.TIMEZONELIST_UPDATE, func);\r\nconst unbindTimezoneListUpdateHandler = (func) => clock.off(CONSTANT.TIMEZONELIST_UPDATE, func);\r\n\r\nconst updateTimezoneList = (timezoneList) => setStorage(CONSTANT.TIMEZONELIST, timezoneList);\r\nconst getTimezoneList = () => getStorage(CONSTANT.TIMEZONELIST);\r\n\r\nexport {\r\n  updateTimezoneList,\r\n  getTimezoneList,\r\n  triggerTimezoneListUpdate,\r\n  bindTimezoneListUpdateHandler,\r\n  unbindTimezoneListUpdateHandler,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Select,\r\n  Fieldset,\r\n  ListItem, Button,\r\n} from 'react95';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport './index.scss';\r\n\r\nimport { triggerTimezoneListUpdate, getTimezoneList, updateTimezoneList } from '../Clock/eventBus';\r\n\r\nimport allTimezones from './timezones.json';\r\n\r\nconst mappedTimezones = allTimezones.map((key) => ({\r\n  label: key,\r\n  value: key,\r\n  lag: parseInt(key.replace(/^\\(GMT([-+]\\d{2}).*$/, '$1'), 10),\r\n}));\r\n\r\nconst currentTimezoneIdx = mappedTimezones.findIndex((zone) => zone.value === '(GMT+08:00) Asia/Taipei');\r\n\r\nconst MAX_TIMEZONE_COUNT = 5;\r\n\r\nclass TzEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timezoneSelections: mappedTimezones,\r\n      selectedTimezone: mappedTimezones[currentTimezoneIdx].value,\r\n      timezoneList: getTimezoneList() || [],\r\n    };\r\n  }\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    const { timezoneList } = this.state;\r\n    const newTimezone = arrayMove(timezoneList, oldIndex, newIndex);\r\n    updateTimezoneList(newTimezone);\r\n    triggerTimezoneListUpdate();\r\n  }\r\n\r\n  onSelectChange = (value) => {\r\n    this.setState({\r\n      selectedTimezone: value,\r\n    });\r\n  }\r\n\r\n  submitAddTz = () => {\r\n    const { timezoneSelections, selectedTimezone, timezoneList } = this.state;\r\n    const newTimezone = timezoneSelections.find((zone) => zone.value === selectedTimezone);\r\n    const newTimezoneList = [...timezoneList, newTimezone];\r\n    updateTimezoneList(newTimezoneList);\r\n    this.setState({\r\n      timezoneList: newTimezoneList,\r\n    });\r\n    triggerTimezoneListUpdate();\r\n  }\r\n\r\n  handleDelete = (value) => {\r\n    const { timezoneList } = this.state;\r\n    const index = timezoneList.findIndex((zone) => zone.value === value);\r\n    timezoneList.splice(index, 1);\r\n    updateTimezoneList(timezoneList);\r\n    this.setState({\r\n      timezoneList,\r\n    });\r\n    triggerTimezoneListUpdate();\r\n  }\r\n\r\n  render() {\r\n    const { timezoneSelections, timezoneList } = this.state;\r\n    const SortableItem = SortableElement(({ value }) => (\r\n      <ListItem key={value.label}>\r\n        <div className=\"timezone-list-item\">\r\n          <div className=\"label\">{value.label}</div>\r\n          <Button\r\n            onClick={() => this.handleDelete(value.value)}\r\n            style={{ marginRight: '-6px', marginTop: '1px' }}\r\n            size=\"sm\"\r\n            square\r\n          >\r\n            <span style={{ fontWeight: 'bold', transform: 'translateY(-1px)' }}>X</span>\r\n          </Button>\r\n        </div>\r\n      </ListItem>\r\n    ));\r\n    const SortableList = SortableContainer(({ items }) => (\r\n      <ul>\r\n        {items && items.map((value, index) => (\r\n          <SortableItem key={`item-${value.value}`} index={index} value={value} />\r\n        ))}\r\n      </ul>\r\n    ));\r\n    return (\r\n      <div className=\"tz-editor\">\r\n        <Fieldset label=\"ADD A TIMEZONE\">\r\n          <div className=\"tz-add\">\r\n            <Select\r\n              selectedIndex={currentTimezoneIdx}\r\n              items={timezoneSelections}\r\n              onChange={this.onSelectChange}\r\n              height=\"100px\"\r\n              width=\"400px\"\r\n            />\r\n            <Button\r\n              onClick={this.submitAddTz}\r\n              disabled={timezoneList.length >= MAX_TIMEZONE_COUNT}\r\n            >\r\n              <span>ADD</span>\r\n            </Button>\r\n          </div>\r\n        </Fieldset>\r\n        <Fieldset label=\"SELECTED TIMEZONE\">\r\n          <SortableList items={timezoneList} onSortEnd={this.onSortEnd} distance={2} />\r\n        </Fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TzEditor;\r\n","import React from 'react';\r\nimport {\r\n  Window, WindowHeader, WindowContent,\r\n  Button,\r\n} from 'react95';\r\nimport { Rnd } from 'react-rnd';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WindowFrame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  handleCloseApp = () => {\r\n    const { appid } = this.props;\r\n    window.terminateApp(appid);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      header, content, width, height, enableResizing,\r\n    } = this.props;\r\n    return (\r\n      <Rnd\r\n        default={{\r\n          x: 0,\r\n          y: 0,\r\n          width,\r\n          height,\r\n        }}\r\n        dragHandleClassName=\"header\"\r\n        enableResizing={enableResizing}\r\n      >\r\n        <Window\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <WindowHeader\r\n            className=\"header\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            {header}\r\n            <Button\r\n              onClick={this.handleCloseApp}\r\n              style={{ marginRight: '-6px', marginTop: '1px' }}\r\n              size=\"sm\"\r\n              square\r\n            >\r\n              <span style={{ fontWeight: 'bold', transform: 'translateY(-1px)' }}>X</span>\r\n            </Button>\r\n          </WindowHeader>\r\n          <WindowContent\r\n            style={{\r\n              overflow: 'hidden',\r\n            }}\r\n          >\r\n            {content}\r\n          </WindowContent>\r\n        </Window>\r\n      </Rnd>\r\n    );\r\n  }\r\n}\r\n\r\nWindowFrame.propTypes = {\r\n  appid: PropTypes.string.isRequired,\r\n  header: PropTypes.node,\r\n  content: PropTypes.node,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  enableResizing: PropTypes.bool,\r\n};\r\n\r\nWindowFrame.defaultProps = {\r\n  header: (<span>APPLICATION</span>),\r\n  content: (<div>_BLANK</div>),\r\n  width: 'auto',\r\n  height: 'auto',\r\n  enableResizing: true,\r\n};\r\n\r\nexport default WindowFrame;\r\n","import React from 'react';\r\nimport TzEditor from './TzEditor';\r\nimport WindowFrame from '../../../layouts/WindowFrame';\r\n\r\nclass ClockSetting extends React.Component {\r\n  appName = 'system.clocksetting'\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const header = (<span>Clock Setting</span>);\r\n    const content = (<TzEditor />);\r\n    return (\r\n      <WindowFrame\r\n        header={header}\r\n        content={content}\r\n        enableResizing={false}\r\n        appid={this.appName}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClockSetting;\r\n","import ClockSetting from './system/ClockSetting';\r\n\r\nexport const CATALOG = {\r\n  APP: 'APPS',\r\n  SETTING: 'SETTINGS',\r\n  ABOUT: 'ABOUT',\r\n};\r\n\r\nexport const REGISTRY = [\r\n  {\r\n    id: 'system.clocksetting',\r\n    app: ClockSetting,\r\n    catalog: CATALOG.SETTING,\r\n    name: 'Clock Setting',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { ListItem, Divider } from 'react95';\r\nimport { CATALOG, REGISTRY } from '../../registry';\r\n\r\nclass StartMenuPopover extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const mainList = Object.keys(CATALOG).map((cat, index) => ({\r\n      name: CATALOG[`${cat}`],\r\n      active: index === 0,\r\n      children: REGISTRY.filter((reg) => reg.catalog === CATALOG[`${cat}`])\r\n        .map((app) => ({\r\n          ...app,\r\n        })),\r\n    }));\r\n    this.state = {\r\n      mainList,\r\n    };\r\n  }\r\n\r\n  handleClickMainlistItem = (idx) => {\r\n    const { mainList } = this.state;\r\n    const newMainList = mainList.map((item, index) => ({\r\n      ...item,\r\n      active: index === idx,\r\n    }));\r\n    this.setState({\r\n      mainList: newMainList,\r\n    });\r\n  }\r\n\r\n  handleClickApplication = (app) => {\r\n    window.launchApp(app.id);\r\n  }\r\n\r\n  render() {\r\n    const { mainList } = this.state;\r\n    const sideList = mainList.find((item) => item.active).children || [];\r\n    return (\r\n      <div className=\"startmenu\">\r\n        <div className=\"panel left\">\r\n          {mainList.map((item, index) => (\r\n            <ListItem\r\n              onClick={() => this.handleClickMainlistItem(index)}\r\n              style={{ textDecoration: item.active ? 'underline' : 'none' }}\r\n            >\r\n              {item.name}\r\n            </ListItem>\r\n          ))}\r\n        </div>\r\n        <Divider vertical size=\"sm\" style={{ height: '100%' }} />\r\n        <div className=\"panel right\">\r\n          {sideList.map((item) => (\r\n            <ListItem onClick={() => this.handleClickApplication(item)}>{item.name}</ListItem>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartMenuPopover;\r\n","import React from 'react';\r\nimport DockApp from '../../../layouts/DockApp';\r\n\r\nimport StartMenuPopover from './StartMenuPopover';\r\n\r\nimport './index.scss';\r\n\r\nclass StartMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const trigger = (\r\n      <span>START</span>\r\n    );\r\n    const popover = (<StartMenuPopover />);\r\n    return (\r\n      <DockApp\r\n        trigger={trigger}\r\n        popover={popover}\r\n        horizontalAlign=\"left\"\r\n        closeOnBlur={false}\r\n        variant=\"default\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartMenu;\r\n","import React from 'react';\r\nimport ReactClock from 'react-clock';\r\nimport { Button } from 'react95';\r\nimport moment from 'moment';\r\n\r\nimport DockApp from '../../../layouts/DockApp';\r\n\r\nimport {\r\n  bindTimezoneListUpdateHandler, unbindTimezoneListUpdateHandler,\r\n  getTimezoneList,\r\n} from './eventBus';\r\n\r\nimport './index.scss';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeFormat: 'HH:mm:ss',\r\n      currentTime: moment(),\r\n      timezoneList: getTimezoneList() || [],\r\n    };\r\n    this.timeout = null;\r\n\r\n    this.dockAppRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timeout = setInterval(() => {\r\n      this.updateCurrentTime();\r\n    }, 10);\r\n\r\n    bindTimezoneListUpdateHandler(this.updateTimezoneList);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.timeout);\r\n    unbindTimezoneListUpdateHandler(this.updateTimezoneList);\r\n  }\r\n\r\n  updateCurrentTime = () => {\r\n    this.setState({\r\n      currentTime: moment(),\r\n    });\r\n  }\r\n\r\n  updateTimezoneList = () => {\r\n    const timezoneList = getTimezoneList();\r\n    this.setState({\r\n      timezoneList,\r\n    });\r\n  }\r\n\r\n  handleClickSetting = () => {\r\n    window.launchApp('system.clocksetting');\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.dockAppRef.current.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const { currentTime, timeFormat, timezoneList } = this.state;\r\n    const trigger = (\r\n      <span>{currentTime.format(timeFormat)}</span>\r\n    );\r\n    const popover = (\r\n      <div className=\"clock-popover\">\r\n        <div className=\"clock-display\">\r\n          <div className=\"one-clock\">\r\n            <ReactClock value={currentTime.toDate()} />\r\n            <div className=\"desc\">LOCAL TIME</div>\r\n          </div>\r\n          {\r\n            timezoneList.map(({ lag, label }) => (\r\n              <div className=\"one-clock\">\r\n                <ReactClock value={currentTime.add(lag, 'h').toDate()} />\r\n                <div className=\"desc\">{label.split(' ').join('\\n')}</div>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        <div className=\"panel\">\r\n          <Button onClick={this.handleClickSetting}>SETTING</Button>\r\n          <Button onClick={this.handleClickClose}>X</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <DockApp\r\n        trigger={trigger}\r\n        popover={popover}\r\n        closeOnBlur={false}\r\n        ref={this.dockAppRef}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport { MdFullscreen } from 'react-icons/md';\r\nimport DockApp from '../../../layouts/DockApp';\r\n\r\nimport { toggleFullScreen } from '../../../utils/index';\r\n\r\nconst trigger = (\r\n  <span><MdFullscreen /></span>\r\n);\r\n\r\nconst FullScreenToggle = () => (\r\n  <DockApp trigger={trigger} onClick={toggleFullScreen} />\r\n);\r\n\r\nexport default FullScreenToggle;\r\n","import { EventEmitter } from 'events';\r\n\r\nconst system = new EventEmitter();\r\n\r\nwindow.launchApp = (appid) => system.emit('launch', appid);\r\nwindow.terminateApp = (appid) => system.emit('terminate', appid);\r\nwindow.killApp = (pid) => system.emit('kill', pid);\r\n\r\nexport default system;\r\n","import React from 'react';\r\nimport { observable, autorun, computed } from 'mobx';\r\n\r\nimport systemEvt from './SystemEventBus';\r\nimport { REGISTRY } from '../apps/registry';\r\n\r\nexport class SystemStore {\r\n  appid = 0\r\n\r\n  @observable runningApps = []\r\n\r\n  @computed get runningAppids() {\r\n    return this.runningApps.map((app) => app.id);\r\n  }\r\n\r\n  constructor() {\r\n    autorun(() => console.log('system'));\r\n  }\r\n\r\n  launchApp(newApp) {\r\n    const appid = newApp.id;\r\n    if (this.runningAppids.includes(appid)) return -1;\r\n\r\n    this.appid += 1;\r\n    const App = newApp.app;\r\n    const theApp = <App key={this.appid} />;\r\n    const defaultDisplayName = newApp.name || 'UNKNOWN APP';\r\n    this.runningApps.push({\r\n      id: appid,\r\n      displayName: defaultDisplayName,\r\n      app: theApp,\r\n      pid: this.appid,\r\n      isActive: true,\r\n    });\r\n\r\n    this.activateApp(appid);\r\n\r\n    return this.appid;\r\n  }\r\n\r\n  activateApp(appid) {\r\n    for (let i = 0; i < this.runningApps.length; i += 1) {\r\n      this.runningApps[i].isActive = appid === this.runningApps[i].id;\r\n    }\r\n  }\r\n\r\n  terminateApp(appid) {\r\n    this.runningApps = this.runningApps.filter((app) => app.id !== appid);\r\n  }\r\n\r\n  killApp(pid) {\r\n    this.runningApps = this.runningApps.filter((app) => app.pid !== pid);\r\n  }\r\n}\r\n\r\nconst systemStore = new SystemStore();\r\n\r\nsystemEvt.on('launch', (appid) => {\r\n  const targetApp = REGISTRY.find((app) => app.id.split('#')[0] === appid);\r\n  if (!targetApp) return;\r\n  console.log(systemStore.launchApp(targetApp));\r\n});\r\n\r\nsystemEvt.on('terminate', (appid) => {\r\n  systemStore.terminateApp(appid);\r\n});\r\n\r\nsystemEvt.on('kill', (pid) => {\r\n  systemStore.killApp(pid);\r\n});\r\n\r\nexport default systemStore;\r\n","import React from 'react';\r\nimport {\r\n  AppBar, Toolbar, Divider, Button,\r\n} from 'react95';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport StartMenu from '../../apps/system/StartMenu';\r\nimport ClockApp from '../../apps/system/Clock';\r\nimport FullScreenToggle from '../../apps/system/FullScreenToggle';\r\n\r\nimport { SystemStore } from '../../core/System';\r\n\r\nimport './index.scss';\r\n\r\nclass SystemBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  handleClick = (appid) => {\r\n    const { store } = this.props;\r\n    store.activateApp(appid);\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n    return (\r\n      <AppBar style={{ top: 'auto', bottom: 0 }}>\r\n        <Toolbar>\r\n          <div>\r\n            <StartMenu />\r\n          </div>\r\n          <div className=\"running-apps\">\r\n            {store.runningApps.map((app) => (\r\n              <Button\r\n                className=\"app-docker\"\r\n                onClick={() => this.handleClick(app.id)}\r\n                active={app.isActive}\r\n              >\r\n                {app.displayName}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <div className=\"widgets\">\r\n            <Divider vertical style={{ margin: '6px 0', height: 'auto' }} />\r\n            <FullScreenToggle />\r\n            <ClockApp />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nSystemBar.propTypes = {\r\n  store: PropTypes.instanceOf(SystemStore).isRequired,\r\n};\r\n\r\nexport default SystemBar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport SystemBar from '../../layouts/SystemBar/index';\r\n\r\nimport './index.scss';\r\n\r\n@observer\r\nclass System extends Component {\r\n  render() {\r\n    const { store } = this.props;\r\n    const { runningApps } = store;\r\n    return (\r\n      <div className=\"system-view\">\r\n        <div className=\"desktop\">\r\n          {runningApps.map(({ app }) => app)}\r\n        </div>\r\n        <div className=\"dock\">\r\n          <SystemBar store={store} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSystem.propTypes = {\r\n  store: PropTypes.shape({\r\n    runningApps: PropTypes.array,\r\n  }),\r\n};\r\n\r\nSystem.defaultProps = {\r\n  store: {\r\n    runningApps: [],\r\n  },\r\n};\r\n\r\nexport default System;\r\n","import React from 'react';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport { reset, themes } from 'react95';\r\n\r\nimport System from './views/System/index';\r\n\r\nimport SystemStore from './core/System';\r\n\r\nimport './App.css';\r\n\r\nconst ResetStyles = createGlobalStyle`\r\n  ${reset}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ResetStyles />\r\n      <ThemeProvider theme={themes.default}>\r\n        <System store={SystemStore} />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\ndocument.addEventListener('contextmenu', (ev) => {\r\n  ev.preventDefault();\r\n  return false;\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}